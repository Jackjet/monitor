<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/beans"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xmlns:tx ="http://www.springframework.org/schema/tx" 
			 xmlns:p="http://www.springframework.org/schema/p"
			 xmlns:mvc="http://www.springframework.org/schema/mvc"
			 xmlns:aop="http://www.springframework.org/schema/aop"
			 xmlns:beans="http://www.springframework.org/schema/beans"
			 xmlns:context="http://www.springframework.org/schema/context"
			 xsi:schemaLocation="http://www.springframework.org/schema/mvc
			 				       http://www.springframework.org/schema/mvc/spring-mvc.xsd
			 				       http://www.springframework.org/schema/tx 
								   http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
								   http://www.springframework.org/schema/beans 
								   http://www.springframework.org/schema/beans/spring-beans.xsd
								   http://www.springframework.org/schema/aop 
								   http://www.springframework.org/schema/aop/spring-aop.xsd 
								   http://www.springframework.org/schema/context 
								   http://www.springframework.org/schema/context/spring-context.xsd">
	<!--
       - ===============================================
       - 动态数据源
       - @author li.hui
       - @date 2016-12-02
       - ===============================================
    -->
	<beans:bean id="dynamicDataSource" class="com.lycheeframework.core.common.datasource.DynamicDataSource">
		<beans:property name="targetDataSources">
			<beans:map>
				<beans:entry key="dsyOne" value-ref="dsyOne" />
			</beans:map>
		</beans:property>
		<beans:property name="defaultTargetDataSource" ref="dsyOne" />
	</beans:bean>
	
	<!--
       - ===============================================
       - 1号数据源
       - @author li.hui
       - @date 2016-12-02
       - ===============================================
    -->
	<beans:bean id="dsyOne" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<beans:property name="url" value="${mysql.url}" />
		<beans:property name="username" value="${mysql.username}" />
		<beans:property name="password" value="${mysql.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<beans:property name="initialSize" value="${dataSource.initialPoolSize}" />
		<beans:property name="minIdle" value="${dataSource.minPoolSize}" />
		<beans:property name="maxActive" value="${dataSource.maxIdleTime}" />
		<!-- 配置获取连接等待超时的时间 -->
		<beans:property name="maxWait" value="${dataSource.checkoutTimeout}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<beans:property name="timeBetweenEvictionRunsMillis" value="${dataSource.acquireRetryAttempts}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<beans:property name="minEvictableIdleTimeMillis" value="300000" />
		<beans:property name="validationQuery" value="SELECT 'x'" />
		<beans:property name="testWhileIdle" value="true" />
		<beans:property name="testOnBorrow" value="false" />
		<beans:property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<!-- 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。 -->
		<beans:property name="poolPreparedStatements" value="false" />
		<beans:property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
		<beans:property name="filters" value="stat" />
	</beans:bean>
</beans:beans>